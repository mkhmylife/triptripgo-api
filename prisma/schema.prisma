// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Hotel {
  id                    Int                    @id @default(autoincrement())
  slug                  String?                @unique
  name                  String
  nameEn                String
  chainName             String?
  agoda_id              Int?
  trip_id               Int?
  zipcode               String?
  city                  String
  country               String
  area                  String?
  starRating            Int
  latitude              String
  longitude             String
  yearOpened            Int?
  photoUrl1             String?                @db.Text
  photoUrl2             String?                @db.Text
  photoUrl3             String?                @db.Text
  photoUrl4             String?                @db.Text
  photoUrl5             String?                @db.Text
  description           String?                @db.Text
  numberOfReviews       Int?
  numberOfRooms         Int?
  ratingAverage         Float?
  prices                HotelPrice[]
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  places                HotelToPlaceDistance[]
  nearestMetroStation   HotelToPlaceDistance?  @relation("NearestMetroStation", fields: [nearestMetroStationId], references: [id])
  nearestMetroStationId Int?
  nearestCheckPoint     HotelToPlaceDistance?  @relation("NearestCheckPoint", fields: [nearestCheckPointId], references: [id])
  nearestCheckPointId   Int?
}

model HotelPrice {
  id         Int      @id @default(autoincrement())
  priceTrip  Float?
  priceAgoda Float?
  hotel      Hotel    @relation(fields: [hotelId], references: [id])
  date       DateTime
  hotelId    Int

  @@unique([hotelId, date])
  @@index([hotelId])
}

model Place {
  id        Int                    @id @default(autoincrement())
  name      String                 @unique
  latitude  String
  longitude String
  group     String
  hotels    HotelToPlaceDistance[]
}

model HotelToPlaceDistance {
  id                        Int     @id @default(autoincrement())
  hotel                     Hotel   @relation(fields: [hotelId], references: [id])
  nearestHotelsByMetro      Hotel[] @relation("NearestMetroStation")
  nearestHotelsByCheckPoint Hotel[] @relation("NearestCheckPoint")
  place                     Place   @relation(fields: [placeId], references: [id])
  hotelId                   Int
  placeId                   Int
  distance                  Float

  @@unique([hotelId, placeId])
  @@index([distance])
}

model Log {
  id        BigInt   @id @default(autoincrement())
  name      String
  payload   Json?
  createdAt DateTime @default(now())
}
